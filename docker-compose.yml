version: '3.8'
services:
  config-server:
    build:
      context: ./config-server
      dockerfile: Dockerfile
    ports:
      - 8888:8888
    networks:
      - my-network

  eureka-server:
    build:
      context: ./discovery-server
      dockerfile: Dockerfile
    ports:
      - 8761:8761
    networks:
      - my-network
    environment:
      - SPRING_PROFILES_ACTIVE=default

  users-db:
    image: postgres
    container_name: users-db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=microservices-users
    ports:
      - "5433:5432"
    networks:
      my-network:
        aliases:
          - users-db

  posts-db:
    image: postgres
    container_name: posts-db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=microservices-posts
    ports:
      - "5434:5432"
    networks:
      my-network:
        aliases:
          - posts-db

  jobs-db:
    image: postgres
    container_name: jobs-db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=microservices-jobs
    ports:
      - "5435:5432"
    networks:
      my-network:
        aliases:
          - jobs-db

  company-db:
    image: postgres
    container_name: company-db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=microservices-company
    ports:
      - "5436:5432"
    networks:
      my-network:
        aliases:
          - company-db

  messages-db:
    image: mongo
    container_name: messages-db
    ports:
      - "27017:27017"
    networks:
      my-network:
        aliases:
          - messages-db

  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    ports:
      - 8020:8020
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://users-db:5432/microservices-users
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
    networks:
      - my-network
    depends_on:
      - users-db
      - eureka-server
    restart: always

  post-service:
    build:
      context: ./post-service
      dockerfile: Dockerfile
    ports:
      - 8010:8010
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://posts-db:5432/microservices-posts
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
    networks:
      - my-network
    depends_on:
      - posts-db
      - eureka-server

  job-service:
    build:
      context: ./job-service
      dockerfile: Dockerfile
    ports:
      - 8040:8040
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://jobs-db:5432/microservices-jobs
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
    depends_on:
      - jobs-db
      - eureka-server
    networks:
      - my-network

  company-service:
    build:
      context: ./company-service
      dockerfile: Dockerfile
    ports:
      - 8181:8181
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://company-db:5432/microservices-company
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
    depends_on:
      - company-db
      - eureka-server
    networks:
      - my-network

#  message-service:
#    build:
#      context: ./message-service
#      dockerfile: Dockerfile
#    ports:
#      - 8100:8100
#    environment:
#      - SPRING_DATA_MONGODB_URI=mongodb://messages-db:27017/microservices-messages
#    networks:
#      - my-network
#    depends_on:
#      - messages-db
#      - eureka-server

networks:
  my-network:
    driver: bridge